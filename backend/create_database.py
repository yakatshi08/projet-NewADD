"""
Cr√©er la base de donn√©es directement avec Python
"""
import psycopg2
from psycopg2 import sql
import getpass

def create_database():
    print("üóÑÔ∏è Cr√©ation de la base de donn√©es BI Analytics...")
    
    # Demander les informations de connexion
    host = input("Host PostgreSQL (par d√©faut: localhost): ") or "localhost"
    port = input("Port PostgreSQL (par d√©faut: 5432): ") or "5432"
    username = input("Utilisateur PostgreSQL (par d√©faut: postgres): ") or "postgres"
    password = getpass.getpass("Mot de passe PostgreSQL: ")
    
    try:
        # Se connecter au serveur PostgreSQL
        conn = psycopg2.connect(
            host=host,
            port=port,
            user=username,
            password=password,
            database="postgres"
        )
        conn.autocommit = True
        cursor = conn.cursor()
        
        # V√©rifier si la base existe
        cursor.execute("SELECT 1 FROM pg_database WHERE datname = 'bi_analytics'")
        exists = cursor.fetchone()
        
        if exists:
            print("‚ö†Ô∏è  La base 'bi_analytics' existe d√©j√†.")
            response = input("Voulez-vous la recr√©er ? (o/N): ")
            if response.lower() == 'o':
                print("üóëÔ∏è  Suppression de l'ancienne base...")
                cursor.execute("DROP DATABASE bi_analytics")
                print("‚úÖ Ancienne base supprim√©e")
            else:
                print("‚úÖ Utilisation de la base existante")
                cursor.close()
                conn.close()
                return True
        
        # Cr√©er la nouvelle base
        print("üìù Cr√©ation de la base bi_analytics...")
        cursor.execute("CREATE DATABASE bi_analytics")
        print("‚úÖ Base de donn√©es 'bi_analytics' cr√©√©e avec succ√®s!")
        
        cursor.close()
        conn.close()
        
        # Cr√©er le fichier .env
        update_env_file(host, port, username, password)
        
        return True
        
    except Exception as e:
        print(f"‚ùå Erreur : {e}")
        return False

def update_env_file(host, port, username, password):
    """Mettre √† jour le fichier .env"""
    print("\nüìù Mise √† jour du fichier .env...")
    
    env_content = f"""# Application
PROJECT_NAME="BI Analytics API"
VERSION="1.0.0"

# Security
SECRET_KEY="your-secret-key-here-change-in-production"
ALGORITHM="HS256"
ACCESS_TOKEN_EXPIRE_MINUTES=10080

# Database
POSTGRES_SERVER={host}
POSTGRES_USER={username}
POSTGRES_PASSWORD={password}
POSTGRES_DB=bi_analytics
POSTGRES_PORT={port}

# Redis
REDIS_URL=redis://localhost:6379

# CORS
BACKEND_CORS_ORIGINS=["http://localhost:5173","http://localhost:3000"]
"""
    
    with open('.env', 'w') as f:
        f.write(env_content)
    
    print("‚úÖ Fichier .env mis √† jour")

if __name__ == "__main__":
    if create_database():
        print("\n‚úÖ Base de donn√©es pr√™te!")
        print("üìå Ex√©cutez maintenant : python init_and_test.py")
